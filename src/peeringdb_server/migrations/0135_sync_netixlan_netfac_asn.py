# Generated by Django 4.2.16 on 2024-10-29 11:28

import django.core.validators
import django_inet.models
from django.db import migrations, models


def forward_netixlan(apps, schema_editor):
    """
    sync all netixlan.asn values to the network.asn values
    """

    NetworkIXLAN = apps.get_model("peeringdb_server", "NetworkIXLAN")

    try:
        # set updated to auto_now=False to avoid updating the updated field
        NetworkIXLAN._meta.get_field("updated").auto_now = False

        objects = []

        for netixlan in NetworkIXLAN.handleref.filter(status="deleted").select_related(
            "network"
        ):
            netixlan.asn = netixlan.network.asn
            objects.append(netixlan)

        NetworkIXLAN.handleref.bulk_update(objects, ["asn"])

    finally:
        # restore auto_now=True
        NetworkIXLAN._meta.get_field("updated").auto_now = True


def forward_netfac(apps, schema_editor):
    """
    sync all netfac.local_asn values to the network.asn values
    """

    NetworkFacility = apps.get_model("peeringdb_server", "NetworkFacility")

    try:
        # set updated to auto_now=False to avoid updating the updated field
        NetworkFacility._meta.get_field("updated").auto_now = False

        objects = []

        for netfac in NetworkFacility.handleref.filter(status="deleted").select_related(
            "network"
        ):
            netfac.local_asn = netfac.network.asn
            objects.append(netfac)

        NetworkFacility.handleref.bulk_update(objects, ["local_asn"])

    finally:
        # restore auto_now=True
        NetworkFacility._meta.get_field("updated").auto_now = True


class Migration(migrations.Migration):
    dependencies = [
        ("peeringdb_server", "0134_networkixlan_net_side_networkixlan_ix_side"),
    ]

    operations = [
        # migration was not deemed necessary and introduced issues during
        # deploy with production data.
        #
        # should a data fix be necessary in the future this migration should
        # be implemented as a one-off command or django shell script
        #
        # migrations.RunPython(forward_netixlan, migrations.RunPython.noop),
        # migrations.RunPython(forward_netfac, migrations.RunPython.noop),
    ]
