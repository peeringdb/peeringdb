INSTALLED_APPS += (
    'rest_framework',
    'rest_framework_swagger'
    )

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework.authentication.BasicAuthentication',
        'rest_framework.authentication.SessionAuthentication'
    ),

    # Use hyperlinked styles by default.
    # Only used if the `serializer_class` attribute is not set on a view.
    'DEFAULT_MODEL_SERIALIZER_CLASS':
        'rest_framework.serializers.HyperlinkedModelSerializer',

    # Use Django's standard `django.contrib.auth` permissions,
    # or allow read-only access for unauthenticated users.
    # Handle rest of permissioning via django-namespace-perms
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.DjangoModelPermissionsOrAnonReadOnly',
        'django_namespace_perms.rest.BasePermission',
    ],

    'DEFAULT_RENDERER_CLASSES': (
        'peeringdb_server.renderers.MetaJSONRenderer',
    ),

    {% if env.misc.api.throtteling.enabled %}

    'DEFAULT_THROTTLE_CLASSES': (
        'rest_framework.throttling.AnonRateThrottle',
        'rest_framework.throttling.UserRateThrottle'
    ),

    'DEFAULT_THROTTLE_RATES': {
        'anon': '{{ env.misc.api.throtteling.anon }}',
        'user': '{{ env.misc.api.throtteling.user }}'
    },

    {% endif %}

    "DEFAULT_SCHEMA_CLASS": "rest_framework.schemas.coreapi.AutoSchema",



}

CLIENT_COMPAT = {
    "client" : {
        "min": ({{ env.misc.api.compat.client.min }}),
        "max": ({{ env.misc.api.compat.client.max }})
    },
    "backends" : {
        {% for backend in env.misc.api.compat.backends %}
        "{{ backend.name }}" : {
            "min" : ({{ backend.min }}),
            "max" : ({{ backend.max }})
        },
        {% endfor %}
    }
}


SWAGGER_SETTINGS = {
  'api_version' : '0.1',
  'api_path' : '/api',
  'enabled_methods' : [
    'get',
    'post',
    'put',
    'delete'
  ],
  'info' : {
    'contact' : '{{env.contact.email}}',
    'description' : 'PeeringDB REST API'
  }
}

API_DOC_STR = {}
for op in ["list","retrieve","create","update","delete"]:
    with open(os.path.join(BASE_DIR, "docs", "api_{}.md".format(op)), "r") as fh:
        API_DOC_STR[op] = fh.read()
