version: "3.4"
services:
  database:
    image: "mysql:8"
#    command: mysqld --character-set-server=utf8 --collation-server=utf8_unicode_ci
    environment:
      MYSQL_DATABASE: peeringdb
      MYSQL_USER: peeringdb
      MYSQL_PASSWORD: devPASSWORD
      MYSQL_ALLOW_EMPTY_PASSWORD: 1
    restart: always
    ports:
     - "127.0.0.1:13306:3306"
    volumes:
      - peeringdb_database:/var/lib/mysql:Z
    networks:
      - peeringdb_network

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.10.4
    env_file: .env
    ports:
      - "127.0.0.1:9200:9200"
    environment:
      - discovery.type=single-node
    networks:
      - peeringdb_network
    deploy:
      resources:
        limits:
          memory: 2048M

  redis:
    image: "docker.io/redis:7"
    restart: always
    command:
      - sh
      - -c
      - redis-server --requirepass "$${REDIS_PASSWORD:?REDIS_PASSWORD variable is not set}"
    env_file: .env
    ports:
      - "127.0.0.1:6379:6379"
    networks:
      - peeringdb_network
    volumes:
      - peeringdb_redis_data:/data:Z

  peeringdb:
    user: "0:0"
    build:
      context: ../..
      dockerfile: Dockerfile
      target: tester
    container_name: peeringdb
    command: runserver 0.0.0.0:8000
    env_file: .env
    depends_on:
      - database
      - elasticsearch
    environment:
      DATABASE_USER: peeringdb
      DATABASE_PASSWORD: devPASSWORD
      DATABASE_HOST: database
      REDIS_HOST: redis
      REDIS_PASSWORD: devPASSWORD
      ELASTICSEARCH_URL: http://elasticsearch:9200
    ports:
      # this needs to be set in the shell, compose env vars aren't read yet
      - "${DJANGO_PORT:-8000}:8000"
    volumes:
      - ../../src/peeringdb_server:/srv/www.peeringdb.com/peeringdb_server:Z
      - ../../mainsite:/srv/www.peeringdb.com/mainsite:Z
      - ../../tests:/srv/www.peeringdb.com/tests:Z
      - ../../docs:/srv/www.peeringdb.com/docs:Z
      - ../../Ctl/docker/entrypoint.sh:/srv/www.peeringdb.com/entrypoint.sh:Z

      # uncomment if you want indexed search data to be persistent
      # - ../../search-data:/srv/www.peeringdb.com/search-data

      # uncomment if you want api cache files to be persistent
      # - ../../api-cache:/srv/www.peeringdb.com/api-cache

      # uncomment if you want localization to be available for development
      #
      # expects a https://github.com/peeringdb/translations source checkout in the parent
      # directory
      # - ../../../translations/locale:/srv/www.peeringdb.com/locale:Z

      # uncomment if you want a django-peeringdb source checkout
      # to be available for development
      #
      # expects a https://github.com/peeringdb/django-peeringdb source checkout in the parent
      # directory
      # - ../../../django-peeringdb/src/django_peeringdb:/srv/www.peeringdb.com/venv/lib/python3.11/site-packages/django_peeringdb:Z

    networks:
      - peeringdb_network


volumes:
  peeringdb_database:
  peeringdb_redis_data:

networks:
  peeringdb_network:
